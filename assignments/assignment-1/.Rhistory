bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes = allbikes %>% filter(!is.na(Date))
# bike data - work with x
x = allbikes %>% separate(Date, c('Day','Dateth','Month','Year'))
x$Month = match(x$Month, month.abb)
x$Month = sprintf("%02d",x$Month)
x$Dateth = as.integer(x$Dateth)
x$Dateth = sprintf("%02d",x$Dateth)
x = x %>% mutate(Date = paste(Year,Month,Dateth))
x$Date = gsub(" ", "", x$Date, fixed = TRUE)
daily_bike = x %>% group_by(Date) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
daily_bike$Date = as.integer(daily_bike$Date)
# Read rain data
rain_files = list.files(path = '.', pattern = '.txt', full = TRUE)
rain_data = map(rain_files, read_csv)
rain_data = bind_rows(rain_data)[c(-5,-6)]
colnames(rain_data) = c("Station", "Date", "Time", "Amount")
daily_rain = rain_data %>% group_by(Date) %>% summarise(total_daily_rain = sum(Amount))
daily_rain = daily_rain[-1097,] # remove 1st Jan 2019
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
daily_both$Date = as.character(daily_both$Date)
daily_both$Date = as.Date(daily_both$Date, "%Y%m%d")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
daily_both["week"] = floor_date(daily_both$Date, "week")
# plot over every day
ggplot(data = daily_both, aes(Date, total_daily_riders)) +
geom_point() +
labs(y = 'total daily cyclist', x = 'time')
# plot over days over time (weekly data) - "mean" here means the "mean total riders over the week" same for all other ones.
weekly_data = daily_both %>% group_by(week) %>% summarise(mean_weekly_riders = mean(total_daily_riders),
mean_weekly_rain = mean(total_daily_rain))
weekly_data = weekly_data[c(-1,-158),]
ggplot()+
geom_line(data = weekly_data, aes(x = week, y = mean_weekly_riders/100), color = "black")+
geom_line(data = weekly_data, aes(x = week, y = mean_weekly_rain), color = "blue") +
labs(y = 'mean total daily cyclists (00s)', x = 'time')
# plot over days of the week
day_of_week_data = daily_both %>% group_by(day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
day_of_week_data$day_of_week = factor(day_of_week_data$day_of_week, levels = c("Monday","Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_bar(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
# plot seasonal data
seasonal = daily_both %>% separate(Date, c("year","month","day"), sep = '-') %>% group_by(month)
seasonal = seasonal %>% mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA))))) # create seasons
mean_seasonal = seasonal %>%
group_by(year, season) %>%
summarise(mean_cyclists = mean(total_daily_riders, na.rm = T), mean_rain = mean(total_daily_rain, na.rm = T)) %>%
mutate(season = factor(season, levels = c("summer", "autumn", "winter", "spring"))) %>%
arrange(desc(mean_cyclists)) %>%
arrange(year, season)
ggplot(data = mean_seasonal, aes(season,mean_cyclists, group = year)) +
geom_line() +
labs(y = "mean total daily cyclists", x = "season")# this plot is shit
# Fit a regression model to predict number of cyclists from year, season, day of the week, and rain
lm_season = glm(formula = mean_cyclists ~ Season, data = mean_seasonal)
lm_season = glm(formula = mean_cyclists ~ season, data = mean_seasonal)
lm_season
View(mean_seasonal)
View(daily_bike)
View(daily_both)
lm_season = glm(data = daily_both, formula = total_daily_cycylists ~ Date)
lm_season = glm(data = daily_both, formula = total_daily_riders ~ Date)
lm_season
lm_daily = glm(data = daily_both, formula = total_daily_riders ~ Date)
predict(lm_daily)
plot(daily_both$total_daily_riders ~ daily_both$Date)
predictions = predict(lm_daily)
predictions
lines(x = daily_both$Date, y = predictions)
plot(daily_both$total_daily_riders ~ daily_both$Date)
lines(x = daily_both$Date, y = predictions)
plot(daily_both$total_daily_riders ~ daily_both$Date)
lines(x = daily_both$Date, y = predictions, col = "red")
lm_daily
View(day_of_week_data)
# plot over days of the week
day_of_week_data = daily_both %>% group_by(day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
day_of_week_data$day_of_week = factor(day_of_week_data$day_of_week, levels = c("Monday","Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
## days of week data
weekly_data
View(weekly_data)
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_point(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
day_of_week_data
View(daily_both)
daily_both %>% group_by(year, day_of_week) %>% summarise
View(seasonal)
seasonal %>% group_by(year, day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
## days of week data
weekly_data = seasonal %>% group_by(year, day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
View(weekly_data)
# plot over days over time (weekly data) - "mean" here means the "mean total riders over the week" same for all other ones.
weekly_data = daily_both %>% group_by(week) %>% summarise(mean_weekly_riders = mean(total_daily_riders),
mean_weekly_rain = mean(total_daily_rain))
weekly_data = weekly_data[c(-1,-158),]
View(weekly_data)
## days of week data
day_of_week_data = seasonal %>% group_by(year, day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
## days of week data
day_of_week_data = seasonal %>% group_by(year, day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
View(day_of_week_data)
day_of_week_data$day_of_week = factor(day_of_week_data$day_of_week, levels = c("Monday","Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
day_of_week_data$day_of_week = factor(day_of_week_data$day_of_week, levels = c("Monday","Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
day_of_week_data %>% arrange(day_of_week)
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_point(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
View(daily_both)
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_line(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_bar(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_line(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_point(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
View(seasonal)
model <- seasonal %>% lm(total_daily_riders+factor(day_of_week), data = .)
model <- seasonal %>% lm(week ~ total_daily_riders+factor(day_of_week), data = .)
model
model <- seasonal %>% lm(week ~ total_daily_riders+factor(season), data = .)
model
model <- seasonal %>% lm(year~ total_daily_riders+factor(season), data = .)
model <- seasonal %>% lm(total_daily_riders ~ year + factor(season), data = .)
model
seasonal %>% lm(total_daily_riders ~ year + factor(season), data = .)
seasonal %>% lm(total_daily_riders ~ week + factor(season), data = .)
seasonal %>% lm(total_daily_riders ~ year + factor(season), data = .)
seasonal %>% lm(total_daily_riders ~ year, data = .)
browser()
browser(92)
.
head(seasonal)
seasonal %>% lm(total_daily_riders ~ season, data = .)
library('tidyverse')
library('refinr')
library('lubridate')
library('ggplot2')
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes = allbikes %>% filter(!is.na(Date))
# bike data - work with x
x = allbikes %>% separate(Date, c('Day','Dateth','Month','Year'))
x$Month = match(x$Month, month.abb)
x$Month = sprintf("%02d",x$Month)
x$Dateth = as.integer(x$Dateth)
x$Dateth = sprintf("%02d",x$Dateth)
x = x %>% mutate(Date = paste(Year,Month,Dateth))
x$Date = gsub(" ", "", x$Date, fixed = TRUE)
daily_bike = x %>% group_by(Date) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
daily_bike$Date = as.integer(daily_bike$Date)
# Read rain data
rain_files = list.files(path = '.', pattern = '.txt', full = TRUE)
rain_data = map(rain_files, read_csv)
rain_data = bind_rows(rain_data)[c(-5,-6)]
colnames(rain_data) = c("Station", "Date", "Time", "Amount")
daily_rain = rain_data %>% group_by(Date) %>% summarise(total_daily_rain = sum(Amount))
daily_rain = daily_rain[-1097,] # remove 1st Jan 2019
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
daily_both$Date = as.character(daily_both$Date)
daily_both$Date = as.Date(daily_both$Date, "%Y%m%d")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
daily_both["week"] = floor_date(daily_both$Date, "week")
# plot over every day
ggplot(data = daily_both, aes(Date, total_daily_riders)) +
geom_point() +
labs(y = 'total daily cyclist', x = 'time')
# plot over days over time (weekly data) - "mean" here means the "mean total riders over the week" same for all other ones.
weekly_data = daily_both %>% group_by(week) %>% summarise(mean_weekly_riders = mean(total_daily_riders),
mean_weekly_rain = mean(total_daily_rain))
weekly_data = weekly_data[c(-1,-158),]
ggplot()+
geom_line(data = weekly_data, aes(x = week, y = mean_weekly_riders/100), color = "black")+
geom_line(data = weekly_data, aes(x = week, y = mean_weekly_rain), color = "blue") +
labs(y = 'mean total daily cyclists (00s)', x = 'time')
# plot seasonal data
seasonal = daily_both %>% separate(Date, c("year","month","day"), sep = '-') %>% group_by(month)
seasonal = seasonal %>% mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA))))) # create seasons
mean_seasonal = seasonal %>%
group_by(year, season) %>%
summarise(mean_cyclists = mean(total_daily_riders, na.rm = T), mean_rain = mean(total_daily_rain, na.rm = T)) %>%
mutate(season = factor(season, levels = c("summer", "autumn", "winter", "spring"))) %>%
arrange(desc(mean_cyclists)) %>%
arrange(year, season)
ggplot(data = mean_seasonal, aes(season,mean_cyclists, group = year)) +
geom_line() +
labs(y = "mean total daily cyclists", x = "season")
## days of week data
day_of_week_data = seasonal %>% group_by(year, day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
day_of_week_data$day_of_week = factor(day_of_week_data$day_of_week, levels = c("Monday","Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_point(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
# Fit a regression model to predict number of cyclists from year, season, day of the week, and rain
lm_season = glm(formula = mean_cyclists ~ season, data = mean_seasonal)
lm_season
lm_daily = glm(data = daily_both, formula = total_daily_riders ~ Date)
predictions = predict(lm_daily)
plot(daily_both$total_daily_riders ~ daily_both$Date)
lines(x = daily_both$Date, y = predictions, col = "red")
seasonal %>% lm(total_daily_riders ~ year, data = .)
seasonal %>% lm(total_daily_riders ~ season, data = .)
lm_dow = seasonal %>% lm(total_daily_riders ~ day_of_week, data = .)
lm_dow
seasonal %>% factor(.$day_of_week, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
seasonal$day_of_week = factor(seasonal$day_of_week, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
lm_dow = seasonal %>% lm(total_daily_riders ~ day_of_week, data = .)
lm_dow
lm_rain = seasonal %>% lm(total_daily_riders ~ total_daily_rain, data = .)
lm_rain
seasonal %>% lm(total_daily_riders ~ season*total_daily_rain, data = .)
seasonal %>% lm(total_daily_riders ~ season + total_daily_rain, data = .)
View(weekly_data)
ggplot() +
geom_point(data = daily_both, aes(Date, total_daily_riders)) +
geom_point(data = daily_both, aes(Date, total_daily_rain))
ggplot() +
geom_point(data = daily_both, aes(Date, total_daily_riders)) +
geom_point(data = daily_both, aes(Date, total_daily_rain), col = 'blue')
ggplot() +
geom_point(data = daily_both, aes(Date, total_daily_riders), col = 'red') +
geom_point(data = daily_both, aes(Date, total_daily_rain), col = 'blue')
ggplot() +
geom_point(data = daily_both, aes(Date, total_daily_riders/1000), col = 'red') +
geom_point(data = daily_both, aes(Date, total_daily_rain), col = 'blue')
ggplot() +
geom_point(data = daily_both, aes(Date, log(total_daily_riders)), col = 'red') +
geom_point(data = daily_both, aes(Date, total_daily_rain), col = 'blue')
ggplot() +
geom_point(data = daily_both, aes(Date, total_daily_riders/100), col = 'red') +
geom_point(data = daily_both, aes(Date, total_daily_rain), col = 'blue')
ggplot() +
geom_point(data = daily_both, aes(Date, total_daily_riders/100)) +
geom_point(data = daily_both, aes(Date, total_daily_rain), col = 'blue')
lm_year = seasonal %>% glm(total_daily_riders ~ year, data = .)
lm_year
lm_season
View(lm_rain)
summary(lm_season)
summary(lm_year)
summary(lm_dow)
summary(lm_dow)
summary(lm_rain)
lm_season_rain = seasonal %>% lm(total_daily_riders ~ total_daily_rain + season, data = .)
summary(lm_season_rain)
lm_season_rain = seasonal %>% lm(total_daily_riders ~ total_daily_rain*season, data = .)
summary(lm_season_rain)
# load the libraries
library('tidyverse')
library('refinr')
library('lubridate')
library('ggplot2')
# load the data in and join into tidy-ish format getting rid of NA values
# the column names have been cleaned up manually in the csv files themselves
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes = allbikes %>% filter(!is.na(Date))
bikes = allbikes %>% separate(Date, c('Day','Dateth','Month','Year'))
bikes$Month = match(bikes$Month, month.abb)
bikes$Month = sprintf("%02d",bikes$Month)
bikes$Dateth = as.integer(bikes$Dateth)
bikes$Dateth = sprintf("%02d",bikes$Dateth)
bikes = bikes %>% mutate(Date = paste(Year,Month,Dateth))
bikes$Date = gsub(" ", "", bikes$Date, fixed = TRUE)
daily_bike = bikes %>% group_by(Date) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
daily_bike$Date = as.integer(daily_bike$Date)
View(bikes)
bikes = allbikes %>% separate(Date, c('Dow','Date','Month','Year'))
bikes$Month = match(bikes$Month, month.abb)
bikes$Month = sprintf("%02d",bikes$Month)
bikes$Date = as.integer(bikes$Date)
bikes$Date = sprintf("%02d",bikes$Date)
bikes = bikes %>% mutate(Date = paste(Year,Month,Date))
bikes$Date = gsub(" ", "", bikes$Date, fixed = TRUE)
daily_bike = bikes %>% group_by(Date) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
daily_bike$Date = as.integer(daily_bike$Date)
View(bikes)
bikes = allbikes %>% separate(Date, c('Dow','Date','Month','Year'))
bikes$Month = match(bikes$Month, month.abb)
bikes$Month = sprintf("%02d",bikes$Month)
bikes$Date = as.integer(bikes$Date)
bikes$Date = sprintf("%02d",bikes$Date)
bikes = bikes %>% mutate(Date = paste(Year,Month,Date))
bikes$Date = gsub(" ", "", bikes$Date, fixed = TRUE)
daily_bike = bikes %>% group_by(Date) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
daily_bike$Date = as.integer(daily_bike$Date)
rain_files = list.files(path = '.', pattern = '.txt', full = TRUE)
rain_data = map(rain_files, read_csv)
rain_data = bind_rows(rain_data)[c(-5,-6)]
colnames(rain_data) = c("Station", "Date", "Time", "Amount")
daily_rain = rain_data %>% group_by(Date) %>% summarise(total_daily_rain = sum(Amount))
daily_rain = daily_rain[-1097,] # remove 1st Jan 2019
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
daily_both$Date = as.character(daily_both$Date)
daily_both$Date = as.Date(daily_both$Date, "%Y%m%d")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
daily_both["week"] = floor_date(daily_both$Date, "week")
View(daily_both)
View(allbikes)
# load the libraries
library('tidyverse')
library('refinr')
library('lubridate')
library('ggplot2')
# load the data in and join into tidy-ish format getting rid of NA values
# the column names have been cleaned up manually in the csv files themselves
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes = allbikes %>% filter(!is.na(Date))
View(allbikes)
bikes = allbikes %>% separate(Date, c('Dow','Date','Month','Year')) # separate the "Date"" column into separate columns
View(bikes)
bikes$Month = match(bikes$Month, month.abb)
bikes$Month = sprintf("%02d",bikes$Month) #
bikes$Date = as.integer(bikes$Date) # change dtype of date from characters to integers
bikes$Date = sprintf("%02d",bikes$Date) # change single digit dates to double digits
bikes = bikes %>% mutate(time = paste(Year,Month,Date))
bikes$time = gsub(" ", "", bikes$time, fixed = TRUE)
daily_bike = bikes %>% group_by(time) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
View(bike_tidy)
View(daily_bike)
daily_bike$time = as.Date(daily_bike$time) # change time to integer dtype
daily_bike$time = as.integer(daily_bike$time) # change time to integer dtype
# load the rain files
rain_files = list.files(path = '.', pattern = '.txt', full = TRUE)
rain_data = map(rain_files, read_csv)
View(rain_data)
rain_data = bind_rows(rain_data)[c(-5,-6)]
rain_data = bind_rows(rain_data)[c(-5,-6)] # remove columns 5 and 6 because they're not useful
colnames(rain_data) = c("Station", "Date", "Time", "Amount") # rename column names of rain dataset
View(rain_data)
daily_rain = rain_data %>% group_by(Date) %>% summarise(total_daily_rain = sum(Amount))
View(daily_rain)
colnames(rain_data) = c("station", "time", "hour", "amount") # rename column names of rain dataset
daily_rain = rain_data %>% group_by(time) %>% summarise(total_daily_rain = sum(Amount)) # summarise
daily_rain = rain_data %>% group_by(time) %>% summarise(total_daily_rain = sum(amount)) # summarise total daily rain
View(daily_rain)
daily_rain = daily_rain[-1097,] # remove 1st Jan 2019
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "time")
View(daily_both)
daily_both$time = as.character(daily_both$time) # change time dtype to character so that...
daily_both$time = as.Date(daily_both$time, "%Y%m%d")# change time to date dtype
View(daily_both)
daily_both = daily_both %>% mutate(day_of_week = weekdays(time))
# plot of cyclists over time
ggplot(data = daily_both, aes(time, total_daily_riders)) +
geom_point() +
labs(y = 'total daily cyclist', x = 'time')
ggplot() +
geom_point(data = daily_both, aes(time, total_daily_riders/100)) +
geom_point(data = daily_both, aes(time, total_daily_rain), col = 'blue')
View(daily_rain)
View(rain_data)
# plot of cyclists over time
ggplot(data = daily_both, aes(time, total_daily_riders)) +
geom_point() +
labs(y = 'total daily cyclist', x = 'time')
ggplot() +
geom_point(data = daily_both, aes(time, total_daily_riders/100)) +
geom_point(data = daily_both, aes(time, total_daily_rain), col = 'blue')
# plot of cyclists over time
ggplot(data = daily_both, aes(time, total_daily_riders)) +
geom_point() +
labs(y = 'total daily cyclist', x = 'time', title = 'Total Daily Cyclists Over Time (2016 ~ 2018)')
ggplot() +
geom_point(data = daily_both, aes(time, total_daily_riders/100)) +
geom_point(data = daily_both, aes(time, total_daily_rain), col = 'blue')
daily_both %>% separate(Date, c("year","month","day"), sep = '-') %>% group_by(month)
daily_both %>% separate(time, c("year","month","day"), sep = '-') %>% group_by(month)
daily_both %>%
separate(time, c("year","month","day"), sep = '-') %>%
group_by(month) %>%
mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA))))) # create seasons
View(daily_both)
daily_both = daily_both %>%
separate(time, c("year","month","day"), sep = '-') %>%
group_by(month) %>%
mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA))))) # create seasons
daily_both$day_of_week = factor(daily_both$day_of_week, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
daily_both$day_of_week = factor(daily_both$day_of_week, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
mean_seasonal = daily_both %>%
group_by(year, season) %>%
summarise(mean_cyclists = mean(total_daily_riders, na.rm = T), mean_rain = mean(total_daily_rain, na.rm = T)) %>%
mutate(season = factor(season, levels = c("summer", "autumn", "winter", "spring"))) %>%
arrange(desc(mean_cyclists)) %>%
arrange(year, season)
ggplot(data = mean_seasonal, aes(season,mean_cyclists, group = year)) +
geom_line() +
labs(y = "mean total daily cyclists", x = "season")
mean_seasonal = daily_both %>%
group_by(year, season) %>%
summarise(mean_cyclists = total(total_daily_riders, na.rm = T)) %>%
mutate(season = factor(season, levels = c("summer", "autumn", "winter", "spring"))) %>%
arrange(desc(mean_cyclists)) %>%
arrange(year, season)
ggplot(data = mean_seasonal, aes(season,mean_cyclists, group = year)) +
geom_line() +
labs(y = "mean total daily cyclists", x = "season")
mean_seasonal = daily_both %>%
group_by(year, season) %>%
summarise(total_cyclists = sum(total_daily_riders, na.rm = T)) %>%
mutate(season = factor(season, levels = c("summer", "autumn", "winter", "spring"))) %>%
arrange(desc(mean_cyclists)) %>%
arrange(year, season)
mean_seasonal = daily_both %>%
group_by(year, season) %>%
summarise(total_cyclists = sum(total_daily_riders, na.rm = T)) %>%
mutate(season = factor(season, levels = c("summer", "autumn", "winter", "spring"))) %>%
arrange(desc(total_cyclists)) %>%
arrange(year, season)
ggplot(data = mean_seasonal, aes(season,mean_cyclists, group = year)) +
geom_line() +
labs(y = "mean total daily cyclists", x = "season")
ggplot(data = mean_seasonal, aes(season,total_cyclists, group = year)) +
geom_line() +
labs(y = "mean total daily cyclists", x = "season")
View(mean_seasonal)
daily_both = daily_both %>%
mutate(time_copy = time) %>%
separate(time_copy, c("year","month","day"), sep = '-') %>%
group_by(month) %>%
mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA)))))
daily_both = daily_both %>%
mutate(time_copy = .$time) %>%
separate(time_copy, c("year","month","day"), sep = '-') %>%
group_by(month) %>%
mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA)))))
daily_both = daily_both %>%
mutate("time_copy" = .$time) %>%
separate(time_copy, c("year","month","day"), sep = '-') %>%
group_by(month) %>%
mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA)))))
daily_both %>% mutate(time_copy = time)
daily_both %>% mutate(time_ = time)
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "time") # join the rain and bike summaries on the time column
daily_both$time = as.character(daily_both$time) # change time dtype to character so that...
daily_both$time = as.Date(daily_both$time, "%Y%m%d")# change time to date dtype
daily_both = daily_both %>% mutate(day_of_week = weekdays(time)) # get days of week from the time column
daily_both["week"] = floor_date(daily_both$time, "week") # get weekly data
print(daily_both)
daily_both %>% mutate(time_copy = time)
daily_both = daily_both %>%
mutate(time_copy = time) %>%
separate(time_copy, c("year","month","day"), sep = '-') %>%
group_by(month) %>%
mutate(season = ifelse(month == "12"|month=="01"|month=="02", "summer",
ifelse(month=="03"|month=="04"|month=="05", "autumn",
ifelse(month=="06"|month=="07"|month=="08", "winter",
ifelse(month=="09"|month=="10"|month=="11", "spring", NA)))))
View(daily_both)
daily_both$day_of_week = factor(daily_both$day_of_week, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
day_of_week_data = daily_both %>% group_by(year, day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
day_of_week_data$day_of_week = factor(day_of_week_data$day_of_week,
levels = c("Monday","Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_point(stat = "identity") +
labs(y = 'mean total daily cyclists', x = 'days of the week')
ggplot() +
geom_point(data = daily_both, aes(time, total_daily_riders/100)) +
geom_point(data = daily_both, aes(time, total_daily_rain), col = 'blue')
# plot total daily riders
ggplot() +
geom_line(data = daily_both, aes(time, total_daily_riders/100)) +
geom_line(data = daily_both, aes(time, total_daily_rain), col = 'blue')
