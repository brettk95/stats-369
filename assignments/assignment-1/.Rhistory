colnames(bike_data_1)
colnames(bike_data_2)
library('tidyverse')
library(refinr)
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes %>% group_by(counter) %>% count()
#bike_data_1 = as.data.frame(bike_data[1]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
#bike_data_2 = as.data.frame(bike_data[2]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
#bike_data_3 = as.data.frame(bike_data[3]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
library('tidyverse')
library(refinr)
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes %>% group_by(counter) %>% count()
#bike_data_1 = as.data.frame(bike_data[1]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
#bike_data_2 = as.data.frame(bike_data[2]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
#bike_data_3 = as.data.frame(bike_data[3]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
View(allbikes)
unique(allbikes%counter)
unique(allbikes$counter)
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists")))) %>% arrange(counter)
allbikes = sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
allbikes %>% group_by(counter) %>% count()
allbikes<-bind_rows(bike_tidy)
allbikes %>% group_by(counter) %>% count()
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
colnames(allbikes)
unique(allbikes$counter)
merged_colnames = sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
allbikes_colnames = colnames(allbikes)
allbikes_colnames = unique(allbikes$counter)
help("join")
help("zip")
allbikes %>% arrange(counter)
allbikes %>% arrange(counter) %>% count
allbikes %>% arrange(counter) %>% count()
allbikes %>% arrange(counter) %>% unique()
allbikes %>% arrange(counter) %>% unique(counter)
allbikes %>% arrange(counter) %>% unique(allbikes$counter)
arrange(unique(allbikes$counter))
sort(unique(allbikes$counter))
allbikes$counter[allbikes$counter == "Curran St Total"]
allbikes[allbikes$counter == "Curran St Total"]
allbikes$counter[allbikes$counter == "Curran St Total"]
allbikes$counter == "Curran St Total"
arrange(unique(allbikes$counter))
sort(unique(allbikes$counter))
allbikes$counter = 'Curran St Total'
help("n_gram_merge")
source('~/github/stats-369/assignments/assignment-1/assigment-1-script.R', echo=TRUE)
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
sort(unique(allbikes$counter))
sort(unique(n_gram_merge(allbikes$counter)))
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("Curran", "cycle","counter","total","cyclists"))))
help("key_collision_merge")
sort(unique(key_collision_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
allbikes %>% filter('Curran' %in% counter)
allbikes %>% filter('Curran' %in% allbikes$counter)
allbikes %>% filter('Curran' %in% 'counte')
allbikes %>% filter('Curran' %in% 'counter')
allbikes %>% filter(counter %in% 'curran')
allbikes %>% filter(counter %is.in% 'curran')
allbikes %>% filter(counter == 'Curran')
allbikes %>% filter(counter == 'Curran St total')
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
allbikes %>% filter(counter == 'Curran Street Total Cyclists')
allbikes$counter[counter == 'Curran Street Total Cyclists']
allbikes$counter[counter == 'Curran Street Total Cyclists']
allbikes$counter[allbikes$counter == 'Curran Street Total Cyclists']
allbikes$counter[allbikes$counter == 'Curran Street Total Cyclists'] == "Curran Street"
allbikes$counter[allbikes$counter == 'Curran Street Total Cyclists'] = "Curran Street"
unique(allbikes$counter)
sort(unique(allbikes$counter))
allbikes$counter['Curran' %in% allbikes$counter]
"Curran" %in% allbikes$counter
allbikes$counter %>% filter(counter == "Curran STreet")
allbikes %>% filter(counter == "Curran STreet")
allbikes %>% filter(counter == "Curran Street")
allbikes %>% filter(counter == ("Curran Street","Curran St Total"))
allbikes %>% filter(counter == c("Curran Street","Curran St Total"))
allbikes %>% filter(counter ==  "Curran St Total")
View(allbikes)
sort(unique(colnames(allbikes)))
sort(unique(colnames(allbikes$counter)))
sort(unique(allbikes$counter))
allbikes$counter[allbikes$counter == "Curran Street Total"] = "Curran Street"
allbikes$counter[allbikes$counter == "Curran St"] = "Curran Street"
sort(unique(allbikes$counter))
allbikes$counter[allbikes$counter == "Curran Street"] = "Curran St total"
sort(unique(allbikes$counter))
library('tidyverse')
library(refinr)
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes %>% group_by(counter) %>% count()
#bike_data_1 = as.data.frame(bike_data[1]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
#bike_data_2 = as.data.frame(bike_data[2]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
#bike_data_3 = as.data.frame(bike_data[3]) %>% separate(Date, c('Day','Date', 'Month', 'Year'))
sort(unique(n_gram_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
sort(unique(key_collision_merge(allbikes$counter, ignore_strings=c("cycle","counter","total","cyclists"))))
library('tidyverse')
library(refinr)
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes %>% group_by(counter) %>% count()
### Load the Data
### actual Code
View(allbikes)
sort(unique(allbikes$counter))
x = allbikes %>% filter(counter == c("Curran St total", "Curran St Total Cyclists", "Curran Street Total"))
View(x)
x$counter[x$counter == "Curran Street Total"] = "Curran St total"
x = allbikes %>% filter(counter == c("Curran St total", "Curran St Total Cyclists", "Curran Street Total"))
View(x)
x = allbikes %>% filter(counter == c("Curran St total", "Curran Street Total Cyclists", "Curran Street Total"))
x$counter[x$counter == "Curran Street Total Cyclists"] = "Curran St total"
x$counter[x$counter == "Curran Street Total"] = "Curran St total"
allbikes$counter[allbikes$counter == "Curran Street Total"] = "Curran St total"
allbikes$counter[allbikes$counter == "Curran Street Total Cyclists"] = "Curran St total"
allbikes %>% group_by(counter) %>% sum()
allbikes %>% group_by(counter) %>% summarise(n = n())
allbikes %>% group_by(counter) %>% summarise(n = n()) %>% arrange(desc(n))
allbikes %>% group_by(counter) %>% summarise(n = n())
length(allbikes$counter[allbikes$counter == "Curran St Total"])
allbikes$counter[allbikes$counter == "Curran St Total"]
allbikes$counter[allbikes$counter == "Curran St total"]
length(allbikes$counter[allbikes$counter == "Curran St total"])
allbikes %>% group_by(counter) %>% summarise(n = sum())
allbikes %>% group_by(counter) %>% summarise(n = sum)
allbikes %>% group_by(counter) %>% summarise(mean())
allbikes %>% group_by(counter) %>% summarise(sum(n))
View(allbikes)
allbikes %>% group_by(counter) %>% summarise(sum(rider_count))
allbikes %>% group_by(counter) %>% summarise(sum(rider_count))
allbikes %>% group_by(counter) %>% summarise(sum(rider_count)) %>% arrange(desc(sum(rider_count)))
allbikes %>% group_by(counter) %>% summarise(sum(rider_count)) %>% arrange(desc('sum(rider_count)))
allbikes %>% group_by(counter) %>% summarise(sum(rider_count)) %>% arrange(desc('sum(rider_count)'))
allbikes %>% group_by(counter) %>% summarise(sum(rider_count)) %>% arrange(desc('sum(rider_count)'))
allbikes %>% group_by(counter) %>% summarise(sum(rider_count)) %>% arrange(desc("sum(rider_count)"))
allbikes %>% group_by(counter) %>% summarise(totals = sum(rider_count))
allbikes %>% group_by(counter) %>% summarise(totals = sum(rider_count)) %>% arrange(desc(totals))
sort(unique(allbikes$counter))
x = allbikes$counter[allbikes$counter == c("Waterview SP Unitec", "Waterview Unitec Counter Cyclists")]
x = allbikes$counter[allbikes$counter == "Waterview SP Unitec", "Waterview Unitec Counter Cyclists"]
x = allbikes$counter[allbikes$counter == "Waterview SP Unitec"]
x = allbikes %>% filter(counter == c("Waterview SP Unitec", "Waterview Unitec Counter Cyclists"))
allbikes %>% filter(counter == c("Waterview SP Unitec", "Waterview Unitec Counter Cyclists"))
View(x)
allbikes %>% filter(counter == "Waterview SP Unitec")
View(allbikes)
allbikes %>% filter(counter == "Waterview Unitec Counter Cyclists")
View(bike_data)
library('tidyverse')
library(refinr)
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes %>% group_by(counter) %>% count()
allbikes %>% filter(counter == "Waterview SP Unitec")
map(bike_data, selec_if, notallNA)
map(bike_data, select_if, notallNA)
help("bind_rows")
allbikes %>% filter(counter == "Archibald Park Cyclists")
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes %>% group_by(counter) %>% count()
allbikes$counter %>% filter(counter == "Archibald Park Cyclists")
allbikes %>% filter(counter == "Archibald Park Cyclists")
allbikes %>% group_by(counter) %>% summarise(all_na = allNA(rider_count))
allbikes %>% group_by(counter) %>% summarise(all_na = all(is.na(rider_count)))
k = allbikes %>% group_by(counter) %>% summarise(all_na = all(is.na(rider_count)))
View(k)
allbikes %>% filter(counter == "Archibald Park Cyclics")
allbikes %>% filter(counter == "Archibald Park Cyclists")
y = allbikes %>% filter(counter == "Archibald Park Cyclists")
view(allbikes %>% filter(counter == "Archibald Park Cyclists"))
view(allbikes %>% filter(counter == "Archibald Park Cyclists") %>% summarise(na = all(is.na(rider_count)))
view(allbikes %>% filter(counter == "Archibald Park Cyclists") %>% summarise(na = all(is.na(rider_count))))
view(allbikes %>% filter(counter == "Archibald Park Cyclists") %>% summarise(na = all(is.na(rider_count))))
view(allbikes %>% group_by(counter) %>% summarise(na = all(is.na(rider_count))))
allbikes$counter[allbikes$counter == "Curran Street Total"] = "Curran St total"
allbikes$counter[allbikes$counter == "Curran Street Total Cyclists"] = "Curran St total"
view(allbikes %>% group_by(counter) %>% summarise(na = all(is.na(rider_count))))
library('tidyverse')
library('refinr')
library('ggplot2')
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes = allbikes %>% filter(!is.na(Date))
# bike data - work with x
x = allbikes %>% separate(Date, c('Day','Dateth','Month','Year'))
x$Month = match(x$Month, month.abb)
x$Month = sprintf("%02d",x$Month)
x$Dateth = as.integer(x$Dateth)
x$Dateth = sprintf("%02d",x$Dateth)
x = x %>% mutate(Date = paste(Year,Month,Dateth))
x$Date = gsub(" ", "", x$Date, fixed = TRUE)
daily_bike = x %>% group_by(Date) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
daily_bike$Date = as.integer(daily_bike$Date)
# Readrain data
rain_files = list.files(path = '.', pattern = '.txt', full = TRUE)
rain_data = map(rain_files, read_csv)
rain_data = bind_rows(rain_data)[c(-5,-6)]
colnames(rain_data) = c("Station", "Date", "Time", "Amount")
daily_rain = rain_data %>% group_by(Date) %>% summarise(total_daily_rain = sum(Amount))
daily_rain = daily_rain[-1097,] # remove 1st Jan 2019
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
# plot of bike riders over time
daily_both$Date = as.character(daily_both$Date)
daily_both$Date = as.Date(daily_both$Date, "%Y%m%d")
ggplot(data = daily_both, aes(x = Date, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
View(daily_both)
View(daily_both)
daily_both %>% group_by(week = week(Date)) %>% summarise(value = mean(values))
weekdays(daily_both$Date)
daily_both %>% mutate(day = weekdays(Date))
daily_both = daily_both %>% mutate(day = weekdays(Date))
View(daily_both)
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
# plot of bike riders over time
daily_both$Date = as.character(daily_both$Date)
daily_both$Date = as.Date(daily_both$Date, "%Y%m%d")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
# plot over days of week
daily_both %>% group_by(day_of_week) %>% summarise(total = sum(total_daily_riders))
# plot over days of week
daily_both %>% group_by(day_of_week) %>% summarise(total = sum(total_daily_riders)) %>% plot()
# plot over days of week
daily_both %>% group_by(day_of_week) %>% summarise(total = sum(total_daily_riders)) %>% plot(day_of_week, total)
# plot over days of week
weekly_data = daily_both %>% group_by(day_of_week) %>% summarise(total = sum(total_daily_riders))
ggplot(data = weekly, aes(x = day_of_week, y= total))
ggplot(data = weekly_data, aes(x = day_of_week, y= total))
plot(data = weekly_data, x = day_of_week, y= total)
View(daily_both)
View(weekly_data)
plot(x = weekly_data$day_of_week, y= weekly_data$total)
View(weekly_data)
plot(weekly_data$day_of_week, y= weekly_data$total, xlim = )
plot(weekly_data$day_of_week, weekly_data$total, xlim = )
weekly_data
plot(weekly_data$day_of_week, weekly_data$total)
plot(weekly_data$day_of_week, weekly_data$total, type = bar)
plot(weekly_data$day_of_week, weekly_data$total, type = 'bar')
ggplot(data = weekly_data, aes(x = day_of_week, y = total))+
geom_line(color = "#00AFBB", size = 0.01)
daily_both %>%
group_by(year = year(Date), week = week(Date)) %>%
summarise_if(is.numeric, sum)
daily_both %>%
group_by(year = isoyear(Date), week = week(Date)) %>%
summarise_if(is.numeric, sum)
daily_both %>%
group_by(year = year(Date), week = week(Date)) %>%
summarise_if(is.numeric, sum)
install.packages('lubridate')
install.packages("lubridate")
library(lubridate)
daily_both %>%
group_by(year = year(Date), week = week(Date)) %>%
summarise_if(is.numeric, sum)
library('tidyverse')
library('refinr')
library('ggplot2')
bike_files = list.files(path = "." ,pattern=".csv",full=TRUE)
bike_data = map(bike_files,read_csv)
notallNA<-function(x) !all(is.na(x))
bike_data <- map(bike_data, select_if, notallNA)
bike_tidy<-map(bike_data, gather, value="rider_count", key="counter", -Date)
allbikes<-bind_rows(bike_tidy)
allbikes = allbikes %>% filter(!is.na(Date))
# bike data - work with x
x = allbikes %>% separate(Date, c('Day','Dateth','Month','Year'))
x$Month = match(x$Month, month.abb)
x$Month = sprintf("%02d",x$Month)
x$Dateth = as.integer(x$Dateth)
x$Dateth = sprintf("%02d",x$Dateth)
x = x %>% mutate(Date = paste(Year,Month,Dateth))
x$Date = gsub(" ", "", x$Date, fixed = TRUE)
daily_bike = x %>% group_by(Date) %>% summarise(total_daily_riders = sum(rider_count, na.rm = TRUE))
daily_bike$Date = as.integer(daily_bike$Date)
# Read rain data
rain_files = list.files(path = '.', pattern = '.txt', full = TRUE)
rain_data = map(rain_files, read_csv)
rain_data = bind_rows(rain_data)[c(-5,-6)]
colnames(rain_data) = c("Station", "Date", "Time", "Amount")
daily_rain = rain_data %>% group_by(Date) %>% summarise(total_daily_rain = sum(Amount))
daily_rain = daily_rain[-1097,] # remove 1st Jan 2019
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
daily_both$Date = as.character(daily_both$Date)
daily_both$Date = as.Date(daily_both$Date, "%Y%m%d")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
# plot of bike riders over time
ggplot(data = daily_both, aes(x = Date, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
# plot over days of week
weekly_data = daily_both %>% group_by(day_of_week) %>% summarise(total = sum(total_daily_riders))
daily_both %>%
group_by(year = year(Date), week = week(Date)) %>%
summarise_if(is.numeric, sum)
weekly.data = daily_both %>%
group_by(year = year(Date), week = week(Date)) %>%
summarise_if(is.numeric, sum)
ggplot(data = weekly.data, aes(x = week, y = total_daily_riders)) + geom_line(color = "#00AFBB", size = 0.01)
View(weekly.data)
ggplot(data = weekly.data, aes(x = c(year,week), y = total_daily_riders)) + geom_line(color = "#00AFBB", size = 0.01)
typeof(daily_both$Date)
class(daily_both$Date)
View(weekly.data)
ggplot(data = weekly.data, aes(x = c(year,week), y = total_daily_riders)) + geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = daily_both, aes(x = floor_date(Date, "weel"), y = total_daily_riders)) + geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = daily_both, aes(x = floor_date(Date, "week"), y = total_daily_riders)) + geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = daily_both, aes(x = floor_date(Date, "month"), y = total_daily_riders)) + geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = daily_both, aes(x = floor_date(Date, "week"), y = total_daily_riders)) + geom_line(color = "#00AFBB", size = 0.01)
# plot of bike riders over time
ggplot(data = daily_both, aes(x = Date, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
weekly.data = daily_both %>%
group_by(year = year(Date), week = week(Date)) %>%
summarise_if(is.numeric, sum)
# plot over days of week
weekly_data = daily_both %>% group_by(day_of_week) %>% summarise(total = sum(total_daily_riders))
print(weekly_data)
weekly.data
floot(daily_both$Date, "week")
floor_date(daily_both$Date, "week")
View(daily_both)
daily_both["week"] = floor_date(daily_both$Date, "week")
weekly_data = daily_both %>% group_by(week) %>% summarise(n = sum(total_daily_riders), r = sum(total_daily_rain))
View(weekly_data)
plot(weekly_data$week, weekly_data$n)
ggplot(data = weekly_data, aes = (week,n))
# plot over days of week
weekly_data = daily_both %>% group_by(week) %>% summarise(total_daily_riders = sum(total_daily_riders),
total_daily_rain = sum(total_daily_rain))
View(weekly_data)
# column bind daily_bike and daily_rain
daily_both = inner_join(daily_bike, daily_rain, by = "Date")
View(daily_both)
daily_both$Date = as.character(daily_both$Date)
daily_both$Date = as.Date(daily_both$Date, "%Y%m%d")
daily_both = daily_both %>% mutate(day_of_week = weekdays(Date))
daily_both["week"] = floor_date(daily_both$Date, "week")
# plot of bike riders over time
ggplot(data = daily_both, aes(x = Date, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
# plot over days of week
weekly_data = daily_both %>% group_by(week) %>% summarise(total_daily_riders = sum(total_daily_riders),
total_daily_rain = sum(total_daily_rain))
View(weekly_data)
ggplot(data = weekly_data, aes(x = week, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
weekly_data = weekly_data[c(-1,-158),]
ggplot(data = weekly_data, aes(x = week, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = c(total_daily_riders, total_daily_rain)))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = total_daily_rain))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = log(total_daily_riders)))+
geom_line(color = "#00AFBB", size = 0.01)
kggplot(data = weekly_data, aes(x = week, y = log(total_daily_rain)))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = log(total_daily_rain)))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = total_daily_riders))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = total_daily_rain))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = total_daily_riders/1000))+
geom_line(color = "#00AFBB", size = 0.01)
# plot over days over time (weekly data)
weekly_data = daily_both %>% group_by(week) %>% summarise(total_weekly_riders = sum(total_daily_riders),
total_weekly_rain = sum(total_daily_rain))
weekly_data = weekly_data[c(-1,-158),]
ggplot(data = weekly_data, aes(x = week, y = total_weekly_riders/1000))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot(data = weekly_data, aes(x = week, y = total_weekly_rain))+
geom_line(color = "#00AFBB", size = 0.01)
ggplot()+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_riders/1000), color = "red")+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_rain), color = "blue")+
ggplot()+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_riders/1000), color = "red")+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_rain), color = "blue")
p = ggplot()+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_riders/1000), color = "red")+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_rain), color = "blue")
print(p)
p = ggplot()+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_riders/100), color = "red")+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_rain), color = "blue")
print(p)
p = ggplot()+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_riders/1000), color = "black")+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_rain), color = "blue")
print(p)
# plot over days of the week
daily_both %>% group_by(day_of_week) %>% summarise(total_riders_day = sum(total_daily_riders),
total_rain_day = sum(total_daily_rain))
# plot over days of the week
day_of_week_data = daily_both %>% group_by(day_of_week) %>% summarise(total_riders_day = sum(total_daily_riders),
total_rain_day = sum(total_daily_rain))
View(day_of_week_data)
# plot over days of the week
day_of_week_data = daily_both %>% group_by(week, day_of_week) %>% summarise(total_riders_day = sum(total_daily_riders),
total_rain_day = sum(total_daily_rain))
View(day_of_week_data)
# plot over days of the week
day_of_week_data = daily_both %>% group_by(week, day_of_week) %>% summarise(total_riders_day = mean(total_daily_riders))
# plot over days of the week
day_of_week_data = daily_both %>% group_by(week, day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
# plot over days over time (weekly data)
weekly_data = daily_both %>% group_by(week) %>% summarise(total_weekly_riders = mean(total_daily_riders),
total_weekly_rain = mean(total_daily_rain))
p = ggplot()+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_riders/1000), color = "black")+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_rain), color = "blue")
print(p)
weekly_data = weekly_data[c(-1,-158),]
p = ggplot()+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_riders/1000), color = "black")+
geom_line(data = weekly_data, aes(x = week, y = total_weekly_rain), color = "blue")
print(p)
plot(day_of_week_data$day_of_week, day_of_week_data$mean_riders_day)
ggplot()+
geom_line(data = day_of_week_data aes = (x = day_of_week, y = mean_riders_day), color = "red")
ggplot()+
geom_line(data = day_of_week_data, aes = (x = day_of_week, y = mean_riders_day), color = "red")
ggplot()+
geom_line(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")
# plot over days of the week
day_of_week_data = daily_both %>% group_by(week, day_of_week) %>% summarise(mean_riders_day = total(total_daily_riders))
ggplot()+
geom_line(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")
# plot over days of the week
day_of_week_data = daily_both %>% group_by(week) %>% summarise(mean_riders_day = total(total_daily_riders))
# plot over days of the week
day_of_week_data = daily_both %>% group_by(week) %>% summarise(mean_riders_day = mean(total_daily_riders))
ggplot()+
geom_line(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")
# plot over days of the week
day_of_week_data = daily_both %>% group_by(Day) %>% summarise(mean_riders_day = mean(total_daily_riders))
# plot over days of the week
day_of_week_data = daily_both %>% group_by(day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
ggplot()+
geom_line(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")
day_of_week_data$day_of_week = as.factor(day_of_week_data$day_of_week)
ggplot()+
geom_line(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")
ggplot()+
geom_bar(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_bar(stat = "identity")
sort(day_of_week_data)
day_of_week_data %>% arrange(day_of_week)
day_of_week_data$day_of_week = as.Date(day_of_week_data$day_of_week)
day_of_week_data$day_of_week = as.Date.character(day_of_week_data$day_of_week)
day_of_week_data$day_of_week = as.factor(day_of_week_data$day_of_week)
# plot over days of the week
day_of_week_data = daily_both %>% group_by(day_of_week) %>% summarise(mean_riders_day = mean(total_daily_riders))
day_of_week_data$day_of_week = as.factor(day_of_week_data$day_of_week)
help(as.factor)
day_of_week_data$day_of_week = factor(day_of_week_data$day_of_week, levels = c("Monday","Tuesday","Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day))+
geom_bar(stat = "identity")
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "gray")+
geom_bar(stat = "identity")
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")+
geom_bar(stat = "identity")
ggplot(data = day_of_week_data, aes(x = day_of_week, y = mean_riders_day), color = "red")+
geom_bar(stat = "identity")
